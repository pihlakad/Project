@model Software.ViewModel.ComplexMathViewModel
@using Software.Extentions
@using Software.ViewModel

<script src="~/Scripts/ShowItems.js"></script>
<h2>Quantity Details</h2>


<style>
    .textings {        
        float: left;
        margin: 5px 2px 10px 0px;            
    }
    .labels {
        float: left;
        margin: 5px 2px 10px 0px;
        width: 130px;
        text-align: right
    }
</style>
@using (Html.BeginForm("Result", "ComplexMath", FormMethod.Post))
{
 
        <div class="form-group" onclick="ShowInputElement()">
            Select Operation:
            @Html.DropDownListFor(t => t.SelectedOperation, new SelectList(HtmlLists.Operations, "operationName"), new { id = "OperationDropDown" })
        </div>
        <div class="form-group" style="overflow: auto">
            <label class="labels">Measure:</label>
            @Html.TextBoxFor(t => t.Measure)
        </div>           
        <div class="form-group" style="margin: 10px 0 0; overflow: auto ">
            <label class="labels">First Amount:</label>
            @Html.TextBoxFor(t => t.GeneralAmount[0])
        </div>
        <div class="form-inline" style="overflow: auto">     
            <label class="labels">First Unit:</label>       
            <div class="textings" id="FirstQuantity" >
                @Html.TextBoxFor(x => x.QuantityList[0].Amount, new { style = "width:50px" })
                @Html.TextBoxFor(x => x.QuantityList[0].Unit, new { style = "width:50px" })
                ^
                @Html.TextBoxFor(x => x.PowerList[0], new { style = "width:50px" })
            </div>
            <div class="textings" id="SecondQuantity">
                *
                @Html.TextBoxFor(x => x.QuantityList[1].Amount, new { style = "width:50px" })
                @Html.TextBoxFor(x => x.QuantityList[1].Unit, new { style = "width:50px" })
                ^
                @Html.TextBoxFor(x => x.PowerList[1], new { style = "width:50px" })
            </div>
            <div class="textings" id="ThirdQuantity">
                *
                @Html.TextBoxFor(x => x.QuantityList[2].Amount, new { style = "width:50px" })
                @Html.TextBoxFor(x => x.QuantityList[2].Unit, new { style = "width:50px" })
                ^
                @Html.TextBoxFor(x => x.PowerList[2], new { style = "width:50px" })
            </div>
            <div class="textings" id="FourthQuantity">
                *
                @Html.TextBoxFor(x => x.QuantityList[3].Amount, new { style = "width:50px" })
                @Html.TextBoxFor(x => x.QuantityList[3].Unit, new { style = "width:50px" })
                ^
                @Html.TextBoxFor(x => x.PowerList[3], new { style = "width:50px" })
            </div>
        </div>

    
    <div class="form-group" style="margin: 10px 0 0; overflow: auto ">
        <label class="labels">Second Amount:</label>
        @Html.TextBoxFor(t => t.GeneralAmount[1])
    </div>
        <div class="form-inline" style="overflow: auto">
            <label class="labels">Second Unit:</label>
            <div class="textings" id="FirstQuantity">
                @Html.TextBoxFor(x => x.QuantityList[4].Amount, new { style = "width:50px" })
                @Html.TextBoxFor(x => x.QuantityList[4].Unit, new { style = "width:50px" })
                ^
                @Html.TextBoxFor(x => x.PowerList[4], new { style = "width:50px" })
            </div>
            <div class="textings" id="SecondQuantity">
                *
                @Html.TextBoxFor(x => x.QuantityList[5].Amount, new { style = "width:50px" })
                @Html.TextBoxFor(x => x.QuantityList[5].Unit, new { style = "width:50px" })
                ^
                @Html.TextBoxFor(x => x.PowerList[5], new { style = "width:50px" })
            </div>
            <div class="textings" id="ThirdQuantity">
                *
                @Html.TextBoxFor(x => x.QuantityList[6].Amount, new { style = "width:50px" })
                @Html.TextBoxFor(x => x.QuantityList[6].Unit, new { style = "width:50px" })
                ^
                @Html.TextBoxFor(x => x.PowerList[6], new { style = "width:50px" })
            </div>
            <div class="textings" id="FourthQuantity">
                *
                @Html.TextBoxFor(x => x.QuantityList[7].Amount, new { style = "width:50px" })
                @Html.TextBoxFor(x => x.QuantityList[7].Unit, new { style = "width:50px" })
                ^
                @Html.TextBoxFor(x => x.PowerList[7], new { style = "width:50px" })
            </div>
        </div>
        <button type="submit" value="Calcualte" onclick="ShowResult()">Calculate</button>    
}
<label id="ResultLabel">
    Result : @Model.ResultQuantity.Amount @Model.ResultQuantity.Unit
</label>

