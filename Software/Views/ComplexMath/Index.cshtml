@model ComplexMathViewModel
@using Software.ViewModel

<script src="~/Scripts/ShowItems.js"></script>
<h1>Quantity Details</h1>


<style>
    .textings {
        float: left;
        margin: 5px 2px 10px 0;
    }

    .labels {
        float: left;
        margin: 5px 2px 10px 0;
        width: 130px;
        text-align: right;
    }
</style>
@using (Html.BeginForm("Result", "ComplexMath", FormMethod.Post))
{

   
    <div class="btn btn-primary" onclick="ShowInputElement()"  style="color:black " >
        Select Operation:
        @Html.DropDownListFor(t => t.SelectedOperation,
            new SelectList(HtmlLists.Operations, "operationName"),
            new {id = "OperationDropDown"})
        
    </div>

    <div class="form-group" style="overflow-scrolling: auto">
        <h4>  <label class="control-label labels">Measure:</label></h4>
        <input type="text" class="form-control" id="inputDefault"
               @Html.TextBoxFor(t => t.Measure)
    </div>

    <div id="FirstQuantity">
        <div class="form-group" style="overflow-scrolling: auto">
            <h4>  <label class="control-label labels">First Amount:</label></h4>
            <input type="text" class="form-control" id="FirstQuantity"
                   @Html.TextBoxFor(t => t.FirstQuantity.Amount)
        </div>
        

        <div class="form-inline" style="overflow: auto">
            <h4> <label class="control-label labels">First Unit:</label></h4>
            <div>
                
                <input type="text" class="form-control" id="FirstUnit"
                       @Html.TextBoxFor(x => x.UnitList[0], new { style = "width:50px" })
                       ^
                         <input type="text" class="form-control" 
                       @Html.TextBoxFor(x => x.PowerList[0], new { style = "width:50px" })
          
                *
                <input type="text" class="form-control" id="SecondUnit"
                @Html.TextBoxFor(x => x.UnitList[1], new { style = "width:50px" })
                ^
                <input type="text" class="form-control"
                       @Html.TextBoxFor(x => x.PowerList[1], new { style = "width:50px" })
            </div>

            <div>*
                 <input type="text" class="form-control" id="ThirdUnit"
                @Html.TextBoxFor(x => x.UnitList[2], new {style = "width:50px"})
                        ^
                <input type="text" class="form-control" 
                @Html.TextBoxFor(x => x.PowerList[2], new {style = "width:50px"})
            *
                <input type="text" class="form-control" id="FourthUnit"
            @Html.TextBoxFor(x => x.UnitList[3], new {style = "width:50px"})
                       ^
             <input type="text" class="form-control" 
           @Html.TextBoxFor(x => x.PowerList[3], new {style = "width:50px"})
            </div>
        </div>
    </div>

    
    <div id="SecondQuantity">
        <div class="form-group" style="overflow-scrolling: auto ">
            <h4><label class="control-label labels">Second Amount:</label></h4> 
            <input type="text" class="form-control" id="SecondQuantity"
                   @Html.TextBoxFor(t => t.SecondQuantity.Amount)
        </div>
                
        <div class="form-inline" style="overflow: auto">
            <h4><label class="control-label labels">Second Unit:</label></h4>    
            <div>
                <input type="text" class="form-control" id="FirstUnit"
                       @Html.TextBoxFor(x => x.UnitList[4], new {style = "width:50px"})
                       ^
                <input type="text" class="form-control" 
                       @Html.TextBoxFor(x => x.PowerList[4], new {style = "width:50px"})
                      
                       *
                <input type="text" class="form-control" id="FifthUnit"
                       @Html.TextBoxFor(x => x.UnitList[5], new { style = "width:50px" })
                       ^
                <input type="text" class="form-control" 
                       @Html.TextBoxFor(x => x.PowerList[5], new { style = "width:50px" })
            </div>

            <div>  * 
                <input type="text" class="form-control" id="SixthUnit"
                           
                       @Html.TextBoxFor(x => x.UnitList[6], new { style = "width:50px" })
                       ^
                <input type="text" class="form-control" 
                       @Html.TextBoxFor(x => x.PowerList[6], new { style = "width:50px" })
                       *
                <input type="text" class="form-control" id="SeventhUnit"
                       @Html.TextBoxFor(x => x.UnitList[7], new { style = "width:50px" })
                       ^
                <input type="text" class="form-control" 
                       @Html.TextBoxFor(x => x.PowerList[7], new { style = "width:50px" })
            </div>
        </div>
    </div>


    <button  class="btn btn-primary" type="submit" value="Calcualte" style="color: black"
             onclick="ShowResult()">Calculate</button>
            }
<div class="panel panel-primary">
    <div class="panel-heading">
        <h4 class="panel-title" style="color: black">Here you go</h4>
    </div>
    <div class="panel-body">
        <label id="ResultLabel">
            Result : @Model.ResultQuantity.Amount @Model.ResultQuantity.Unit
        </label>
    </div>
</div>
            

