@model ComplexMathViewModel
@using System.Web.Services.Description
@using Software.ViewModel

<script src="~/Scripts/ShowItems.js"></script>
<h1>Quantity Details</h1>


<style>
    .textings {
        float: left;
        margin: 5px 2px 10px 0;
    }

    .labels {
        float: left;
        margin: 5px 2px 10px 0;
        width: 130px;
        text-align: right;
    }
    .panel-primary {
         float: left;
        margin: 5px 2px 10px 0;
        width: 230px;
        text-align: left;
     }
    .panel-heading {
        float: left;
        margin: 5px 2px 10px 0;
        width: 230px;   
    }
  .form-group {
      overflow-scrolling: auto;
  }
</style>
@using (Html.BeginForm("Result", "ComplexMath", FormMethod.Post))
{   
    <div class="btn btn-primary" onclick="ShowInputElement()" style="color:black " >
        Select Operation:
        @Html.DropDownListFor(t => t.SelectedOperation,
            new SelectList(HtmlLists.Operations, "operationName"),
            new {id = "OperationDropDown"})
        
    </div>
   
    <div class="form-group" style="overflow-scrolling: auto">
        <h4>  <label class="control-label labels">Measure:</label></h4>
        <Input type="text" class="form-control" id="inputDefault"
               @Html.TextBoxFor(t => t.Measure)/>

    </div> 
       <div class="form-group" style="overflow-scrolling: auto">
        <h4>  <label class="control-label labels">First Amount:</label></h4>
        <input type="text" class="form-control" id="FirstQuantity"
               @Html.TextBoxFor(t => t.FirstQuantity.Amount) />
    </div>
        <div class="form-inline" style="overflow: auto">
            <h4> <label class="control-label labels">Unit:</label></h4>                    
            <input type="text" class="form-control" id="FirstUnit"
                   @Html.TextBoxFor(x => x.UnitList[0], new { style = "width:50px" })/>
                       ^
                <input type="text" class="form-control" 
                       @Html.TextBoxFor(x => x.PowerList[0], new { style = "width:50px" })/>          
                       *
                <input type="text" class="form-control" id="SecondUnit"
                       @Html.TextBoxFor(x => x.UnitList[1], new { style = "width:50px" })/>
                       ^
                <input type="text" class="form-control"
                       @Html.TextBoxFor(x => x.PowerList[1], new { style = "width:50px" })/>            
                       *
                <input type="text" class="form-control" id="ThirdUnit"
                       @Html.TextBoxFor(x => x.UnitList[2], new {style = "width:50px"})/>
            ^
            <input type="text" class="form-control" 
                   @Html.TextBoxFor(x => x.PowerList[2], new {style = "width:50px"})/>
            *
            <input type="text" class="form-control" id="FourthUnit"
                   @Html.TextBoxFor(x => x.UnitList[3], new {style = "width:50px"})/>
            ^
            <input type="text" class="form-control" 
                   @Html.TextBoxFor(x => x.PowerList[3], new {style = "width:50px"})/>
        </div>
 
    <div class="form-group" style="overflow-scrolling: auto">
        <h4>  <label class="control-label labels">Second Amount:</label></h4>
        <input type="text" class="form-control" id="FirstQuantity"
              
               @Html.TextBoxFor(t => t.SecondQuantity.Amount) /> 
        <div class="form-inline" style="overflow: auto">
            <h4> <label class="control-label labels">Unit:</label></h4>
            <input type="text" class="form-control" id="FirstUnit"
                   @Html.TextBoxFor(x => x.UnitList[0], new { style = "width:50px" }) />
            ^
            <input type="text" class="form-control"
                   @Html.TextBoxFor(x => x.PowerList[0], new { style = "width:50px" }) />
            *
            <input type="text" class="form-control" id="SecondUnit"
                   @Html.TextBoxFor(x => x.UnitList[1], new { style = "width:50px" }) />
            ^
            <input type="text" class="form-control"
                   @Html.TextBoxFor(x => x.PowerList[1], new { style = "width:50px" }) />
            *
            <input type="text" class="form-control" id="ThirdUnit"
                   @Html.TextBoxFor(x => x.UnitList[2], new { style = "width:50px" }) />
            ^
            <input type="text" class="form-control"
                   @Html.TextBoxFor(x => x.PowerList[2], new { style = "width:50px" }) />
            *
            <input type="text" class="form-control" id="FourthUnit"
                   @Html.TextBoxFor(x => x.UnitList[3], new { style = "width:50px" }) />
            ^
            <input type="text" class="form-control"
                   @Html.TextBoxFor(x => x.PowerList[3], new { style = "width:50px" }) />
        </div>
      
    </div>
    <button  class="btn btn-primary" type="submit" value="Calcualte"
             onclick="ShowResult()">Calculate</button>
            }
<div class="panel panel-primary" >
    <div id="ResultLabel" class="panel-heading">
        <h4 class="panel-title">Here you go</h4>
    </div >
  Result : @Model.ResultQuantity.Amount @Model.ResultQuantity.Unit
       
    </div>

            

