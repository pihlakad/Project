@model ComplexMathViewModel
@using Software.ViewModel

<script src="~/Scripts/ShowItems.js"></script>
<h1>Quantity Details</h1>


<style>
    .textings {  
           
        float: left;
        margin: 5px 2px 10px 0;            
    }
    .labels {
        float: left;
        margin: 5px 2px 10px 0;
        width: 130px;
        text-align: right
    }
</style>
@using (Html.BeginForm("Result", "ComplexMath", FormMethod.Post))
{
 
    <div class="btn btn-primary" onclick="ShowInputElement()" >
        Select Operation:
        @Html.DropDownListFor(t => t.SelectedOperation,
            new SelectList(HtmlLists.Operations, "operationName"),
            new {id = "OperationDropDown"})
    </div>

    <div class="form-group" style="overflow-scrolling: auto">
        <h4>  <label class="control-label labels">Measure:</label></h4>
        <input type="text" class="form-control" id="inputDefault"  
                @Html.TextBoxFor(t => t.Measure)
      </div>
    
    <div id="FirstQuantity">
        <div class="form-group" style="overflow-scrolling: auto">
            <h4>  <label class="control-label labels">First Amount:</label></h4>
            <input type="text" class="form-control" id="inputDefault"
                   @Html.TextBoxFor(t => t.FirstQuantity.Amount) 
        </div>
        <div class="form-inline" style="overflow: auto">
            <label class="labels">First Unit:</label>
            <div class="textings" id="FirstUnit">                
                @Html.TextBoxFor(x => x.UnitList[0], new { style = "width:50px" })
                ^
                @Html.TextBoxFor(x => x.PowerList[0], new { style = "width:50px" })
            </div>
            <div class="textings" id="SecondUnit">
                *               
                @Html.TextBoxFor(x => x.UnitList[1], new { style = "width:50px" })
                ^
                @Html.TextBoxFor(x => x.PowerList[1], new { style = "width:50px" })
            </div>
            <div class="textings" id="ThirdUnit">
                *               
                @Html.TextBoxFor(x => x.UnitList[2], new { style = "width:50px" })
                ^
                @Html.TextBoxFor(x => x.PowerList[2], new { style = "width:50px" })
            </div>
            <div class="textings" id="FourthUnit">
                *               
                @Html.TextBoxFor(x => x.UnitList[3], new { style = "width:50px" })
                ^
                @Html.TextBoxFor(x => x.PowerList[3], new { style = "width:50px" })
            </div>
        </div>
    </div>





        <div id="SecondQuantity">
            <div class="form-group" style="margin: 10px 0 0; overflow: auto ">
                <label class="labels">Second Amount:</label>
                @Html.TextBoxFor(t => t.SecondQuantity.Amount)
            </div>
            <div class="form-inline" style="overflow: auto">
                <label class="labels">Second Unit:</label>
                <div class="textings" id="FirstUnit">                   
                    @Html.TextBoxFor(x => x.UnitList[4], new { style = "width:50px" })
                    ^
                    @Html.TextBoxFor(x => x.PowerList[4], new { style = "width:50px" })
                </div>
                <div class="textings" id="FifthUnit">
                    *
                    @Html.TextBoxFor(x => x.UnitList[5], new { style = "width:50px" })
                    ^
                    @Html.TextBoxFor(x => x.PowerList[5], new { style = "width:50px" })
                </div>
                <div class="textings" id="SixthUnit">
                    *                    
                    @Html.TextBoxFor(x => x.UnitList[6], new { style = "width:50px" })
                    ^
                    @Html.TextBoxFor(x => x.PowerList[6], new { style = "width:50px" })
                </div>
                <div class="textings" id="SeventhUnit">
                    *                   
                    @Html.TextBoxFor(x => x.UnitList[7], new { style = "width:50px" })
                    ^
                    @Html.TextBoxFor(x => x.PowerList[7], new { style = "width:50px" })
                </div>
            </div>
        </div>
        <button type="submit" value="Calcualte" onclick="ShowResult()">Calculate</button>    
}
<label id="ResultLabel">
    Result : @Model.ResultQuantity.Amount @Model.ResultQuantity.Unit
</label>

