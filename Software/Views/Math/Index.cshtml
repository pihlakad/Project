@model Software.ViewModel.MathViewModel
@using Software.Extentions
@using Software.ViewModel

<script src="~/Scripts/ShowItems.js"></script>   
<script src="~/Scripts/Validation.js"></script>
<h2>Quantity Details</h2>

<style>
    .textings {
        float: left;
        margin: 5px 2px 10px 0;
    }

    .labels {
        float: left;
        margin: 5px 2px 10px 0;
        width: 130px;
        text-align: right;
    }
    .panel-primary {
        width: 230px;
    }
    .page-heading {
        width: 230px;
    }
  
</style>


@using (Html.BeginForm("Result", "Math", FormMethod.Post))
{
    <body onload="ShowInputElement()"/>
        <div class="btn btn-primary" onclick="ShowInputElement()" style="color: black">
           Select Operation:
                @Html.DropDownListFor(t => t.SelectedOperation, new SelectList(HtmlLists.Operations, "operationName"),
                new { id = "OperationDropDown" })
            </div>
            <div class="form-group" style="overflow-scrolling: auto" id="FirstQuantity">
                <h4> <label class="control-label labels">First Amount:</label></h4>
                <input type="text" class="form-control"
                       @Html.TextBoxFor(x => x.QuantityList[0].Amount, new { Style = "width:80px" })
                <h4> <label class="control-label labels">First Unit:</label></h4>
                <input type="text" class="form-control"
                       @Html.TextBoxFor(x => x.QuantityList[0].Unit, new { Style = "width:80px" , id = "FirstUnit"})
            </div>

            <div class="form-group" style="display: none" id="SecondQuantity">
                <h4> <label class="control-label labels">Second Amount:</label></h4>
                <input type="text" class="form-control"
                       @Html.TextBoxFor(x => x.QuantityList[1].Amount, new { Style = "width:80px" })
                <h4> <label class="control-label labels">Second Unit:</label></h4>
                <input type="text" class="form-control"
                       @Html.TextBoxFor(x => x.QuantityList[1].Unit, new { Style = "width:80px", id = "SecondUnit" })
            </div>
            <button class="btn btn-primary" type="submit" value="Calcualte" onclick="return IsValid();">Calculate</button>

                  }
<div class="panel panel-primary">
    <div class="panel-heading">
        <h4 class="panel-title">Here you go</h4>
    </div>
    <div class="panel-body">
        <label id="ResultLabel">
            Result : @Model.Result @Model.ResultQuantity.Unit
        </label>
    </div>
</div>


