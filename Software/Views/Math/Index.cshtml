@model Software.ViewModel.MathViewModel
@using Software.Extentions
@using Software.ViewModel

<script src="~/Scripts/ShowItems.js"></script>
<h2>Quantity Details</h2>


    @using (Html.BeginForm("Result", "Math", FormMethod.Post))
    {
        <div class="form-horizontal">
            <div class="form-group" onclick="ShowInputElement()">
                Select Operation:
                @Html.DropDownListFor(t => t.SelectedOperation, new SelectList(HtmlLists.Operations, "operationName"),
               new { id = "OperationDropDown" })
            </div>
            <div class="form-group">
                @Html.LabelFor(t => t.Measure)
                @Html.TextBoxFor(t => t.Measure)
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.QuantityList[0].Amount)
                @Html.TextBoxFor(x => x.QuantityList[0].Amount)
                @Html.LabelFor(c => c.QuantityList[0].Unit)
                @Html.TextBoxFor(x => x.QuantityList[0].Unit)
            </div>
            <div id="SecondQuantity" class="form-group">
                @Html.LabelFor(c => c.QuantityList[1].Amount)
                @Html.TextBoxFor(x => x.QuantityList[1].Amount)
                @Html.LabelFor(c => c.QuantityList[1].Unit)
                @Html.TextBoxFor(x => x.QuantityList[1].Unit)
            </div>
            <button type="submit" value="Calcualte" onclick="ShowResult()">Calculate</button>
        </div>
    }
    <label id="ResultLabel">
        Result : @Model.ResultAmount @Model.ResultQuantity.Unit
    </label>

